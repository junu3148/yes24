<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="showing">

<!-- 회차정보가져오기 -->
	<select id="getShowing" parameterType="ShowingVO" resultType="ShowingVO">
		
		<![CDATA[
		      SELECT 
			      	showing_sq         AS showingsq,
				    TO_CHAR(showing_date, 'YYYY-MM-DD') AS showingdate,
				    TO_CHAR(start_time, 'HH24:MI') AS starttime,
				    TO_CHAR(end_time, 'HH24:MI') AS endtime,
				    show_sq            AS showsq,
				    show_information   AS showinformation,
				    showing_stat       AS showingstat
				FROM 
					showing
				where 
					show_sq = #{showSq}
			     AND 
			        to_char(showing_date, 'YYYY-MM-DD') = #{showingDate}
			ORDER BY 
			   		showing_date     		
		]]>
	</select>

<!-- 공연등록 -->
	<insert id="insertShow" parameterType="ShowingVO">

		<selectKey keyProperty="showSq" resultType="int"
			order="BEFORE">
			SELECT seq_show_sq.NEXTVAL AS showSq FROM dual
		</selectKey>
		
		<![CDATA[
				
		  INSERT INTO show (
					        show_sq,
					        main_image,
					        sub_image,
					        start_date,
					        end_date,
					        reservation_date,
					        show_name,
					        cast,
					        director,
					        show_time,
					        viewing_age,
					        show_content,
					        category,
					        show_stat,
					        concert_hall_sq
					       )
			        VALUES ( 
			                #{showSq},
			                #{mainImage},
			                #{subImage},
			                #{startDate},
			                #{endDate},
			                #{reservationDate},
			                #{showName},
			                #{cast},
			                #{director},
			                #{showTime},
			                #{viewingAge},
			                #{cast},
			                #{category},
			                1,
			                #{concertHallSq}                
			               )
		
		]]>

	</insert>
	
	<!-- 공연수정 -->
	<update id="updateShow" parameterType="ShowVO">
	
		<![CDATA[
			
			UPDATE show SET	
				           main_image = #{mainImage},
						   sub_image = #{subImage},	 
						   start_date = #{startDate},
						   end_date = #{endDate},
						   reservation_date = #{reservationDate},
						   show_name = #{showName},
						   cast = #{cast},
						   director = #{director},
						   show_time = #{showTime},
						   viewing_age = #{viewingAge},
						   category = #{category}, 						   
						   concert_hall_sq = #{concertHallSq}
					  WHERE
						   show_sq = #{showSq}
			
		]]>
	
	</update>

	<!-- 좌석클래스 등록 -->
	<insert id="insertSeatClass" parameterType="SeatClassListVO">
	
		<selectKey keyProperty="seatClassSq" resultType="int"
			order="BEFORE">
			SELECT seq_seat_class_sq.NEXTVAL AS seatClassSq FROM dual
		</selectKey>	
	
		<![CDATA[
		
			INSERT INTO seat_class
                     			  (
			                       SEAT_CLASS_SQ,
			                       SEAT_CLASS,
			                       SEAT_PRICE,
			                       SHOW_SQ
			                      )
			                VALUES
			                      (			                       
			                       #{seatClassSq},
			                       #{seatClass},
			                       #{seatPrice},
			                       #{showSq}
			                      )
			
		]]>

	</insert>
	
	<!-- 공연좌석 등록 -->
	<insert id="insertShowSeat" parameterType="SeatClassListVO">
	
		<![CDATA[
		
			INSERT INTO show_seat 
								 (
								  seat_sq,
								  seat_class_sq
								 )
						   VALUES
								 (
								 #{seatSq},
								 #{seatClassSq}
								 )			
		]]>

	</insert>
	
	
	
	<!-- 공연수정 -->
	<update id="updateSeatClass" parameterType="SeatClassVO">
	
		<![CDATA[
		
			UPDATE seat_class
						  SET
						     seat_class =  #{seatClass},
						     seat_price = #{seatPrice}
				        WHERE
						     seat_class_sq = #{seatClassSq}
		]]>
	
	</update>

	<!-- 공연정보가져오기 -->
	<select id="getShow" parameterType="int" resultType="ShowVO">
		
		<![CDATA[

		      SELECT
				    show_sq AS showsq,
				    main_image AS mainimage,
				    sub_image AS subimage,
				    TO_CHAR(start_date, 'YYYY.MM.DD') AS startdate,
				    TO_CHAR(end_date, 'YYYY.MM.DD') AS enddate,
				    TO_CHAR(reservation_date, 'YYYY.MM.DD') AS reservationdate,
				    show_name AS showname,
				    cast,
				    director,
				    show_time AS showtime,
				    viewing_age AS viewingage,
				    show_content AS showcontent,
				    category,
				    show_stat AS showstat,
				    concert_hall_sq AS concerthallsq
				FROM
				    show
			   WHERE
				    show_sq = #{showSq}			
		
		]]>

	</select>
	
	<!-- 공연장 시퀀스로 공연 시퀀스 가지고오기 -->
	<select id="getShowSq" parameterType="int" resultType="ShowVO">
		
		<![CDATA[

		     SELECT
			       show_sq AS showSq
			   FROM
				   show a,
				   concert_hall b
			  WHERE
			       a.concert_hall_sq = b.concert_hall_sq
		        AND 
		           a.concert_hall_sq = #{concerthallsq}
		
		]]>

	</select>	


	<!-- 공연리스트가져오기 -->
	<select id="getShowList" parameterType="int" resultType="ShowVO">

		<![CDATA[
			
			  SELECT
				    show_sq            AS showsq,
				    main_image         AS mainimage,
				    sub_image          AS subimage,
				    start_date         AS startdate,
				    end_date           AS enddate,
				    reservation_date   AS reservationdate,
				    show_name          AS showname,
				    cast,
				    director,
				    show_time          AS showtime,
				    viewing_age        AS viewingage,
				    show_content       AS showcontent,
				    category,
				    show_stat          AS showstat,
				    concert_hall_sq    AS concerthallsq
				FROM
				    show
			  WHERE category = #{category}	    
			ORDER BY
				    show_sq DESC
		]]>

	</select>
	
	<!-- 좌석클래스리스트 -->
	<select id="getSeatClassList" parameterType="int" resultType="SeatClassVO">
			
			  SELECT
				    seat_class_sq   AS SEATCLASSSQ,
				    seat_class      AS SEATCLASS,
				    seat_price      AS SEATPRICE,
				    show_sq         AS SHOWSQ
				FROM
				    seat_class
				WHERE
				    show_sq = #{showSq}
		    ORDER BY 
				    seat_price DESC    
	
	</select>
	

	<!-- 공연좌석삭제 -->
	<delete id="deleteShowSeat" parameterType="int">
	
		<![CDATA[
		
			DELETE show_seat WHERE SEAT_CLASS_SQ =  #{seatClassSq}
				    
		]]>
		
	</delete>
	
	<!-- 잔여좌석 가져오기 -->
	<select id="getRemainingSeats" parameterType="ShowingVO" resultType="RemainingSeatsVO">
		
		<![CDATA[
		
			  SELECT
				    seat_class      AS seatclass,
				    seat_class_sq   AS seatclasssq,
				    seat_price      AS seatprice,
				    COUNT(*) AS seatea
				FROM
				    (
				        SELECT
				            c.seat_class,
				            a.seat_no,
				            c.seat_class_sq,
				            c.seat_price
				        FROM
				            seat a
				            INNER JOIN show_seat b ON a.seat_sq = b.seat_sq
				            INNER JOIN seat_class c ON b.seat_class_sq = c.seat_class_sq
				        WHERE
				            concert_hall_sq = (
				                SELECT
				                    concert_hall_sq
				                FROM
				                    show
				                WHERE
				                    show_sq = (
				                        SELECT
				                            show_sq
				                        FROM
				                            showing
				                        WHERE
				                            showing_sq = #{showingSq}
				                    )
				            )
				        MINUS
				        SELECT DISTINCT
				            i.seat_class,
				            j.showing_seat_no,
				            j.seat_class_sq,
				            i.seat_price
				        FROM
				            seat_class i
				            INNER JOIN (
				                SELECT
				                    a.show_sq,
				                    b.showing_seat_no,
				                    b.seat_class_sq
				                FROM
				                    show a
				                    INNER JOIN (
				                        SELECT
				                            show_sq,
				                            showing_seat_no,
				                            seat_class_sq
				                        FROM
				                            showing a
				                            INNER JOIN showing_seat b ON a.showing_sq = b.showing_sq
				                        WHERE
				                            b.showing_sq = #{showingSq}
				                    ) b ON a.show_sq = b.show_sq
				            ) j ON i.seat_class_sq = j.seat_class_sq
				    ) 
				GROUP BY
				    seat_class,
				    seat_class_sq,
				    seat_price
				ORDER BY
				    seat_class_sq
				    
		]]>
	
	
	</select>
	

</mapper>